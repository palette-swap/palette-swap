#pragma once

#include "components.hpp"

// the player
Entity create_player(uvec2 pos);
// the camera
Entity create_camera(uvec2 pos);
// the enemy
Entity create_enemy(ColorState team, EnemyType type, uvec2 map_pos);
// the AOE
std::vector<Entity> create_aoe(const std::vector<uvec2>& aoe_area, const Stats& stats, EnemyType enemy_type);
// arrows generated by player
Entity create_arrow(vec2 position);
// a red line for debugging purposes
Entity create_line(vec2 position, float length, float angle);
// a path point for debugging purposes
Entity create_path_point(vec2 position);
// Creates a team that encompasses a group of units
Entity create_team();
// Creates an item
Entity create_item_template(const std::string& name, const SlotList<bool>& allowed_slots);
// Creates a spell (also an item)
Entity create_spell(const std::string& name, std::vector<Entity> attacks);
// Creates a weapon (also an item)
Entity create_weapon(const std::string& name, std::vector<Entity> attacks);
// Creates an emitter of ring AOEs
Entity create_aoe_emitter(uvec2 center);